/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Error;
import org.openapitools.model.Individual;
import org.openapitools.model.IndividualFVO;
import org.openapitools.model.IndividualMVO;
import org.openapitools.model.JsonPatch;
import org.openapitools.model.PatchIndividual200Response;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-07-08T19:14:52.617209500+05:30[Asia/Calcutta]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "individual", description = "Operations for Individual Resource")
public interface IndividualApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /individual : Creates a Individual
     * This operation creates a Individual entity.
     *
     * @param individualFVO The Individual to be created (required)
     * @param fields Comma-separated properties to be provided in response (optional)
     * @return OK/Created (status code 201)
     *         or Accepted (status code 202)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     *         or Not Implemented (status code 501)
     *         or Service Unavailable (status code 503)
     */
    @Operation(
        operationId = "createIndividual",
        summary = "Creates a Individual",
        description = "This operation creates a Individual entity.",
        tags = { "individual" },
        responses = {
            @ApiResponse(responseCode = "201", description = "OK/Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Individual.class))
            }),
            @ApiResponse(responseCode = "202", description = "Accepted"),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "501", description = "Not Implemented", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "Service Unavailable", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/individual",
        produces = { "application/json" },
        consumes = { "application/json" }
    )

    default ResponseEntity<Individual> createIndividual(
            @Parameter(name = "IndividualFVO", description = "The Individual to be created", required = true) @Valid @RequestBody IndividualFVO individualFVO,
            @Parameter(name = "fields", description = "Comma-separated properties to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{\n" +
                            "  \"@type\": \"Individual\",\n" +
                            "  \"@baseType\": \"Party\",\n" +
                            "  \"givenName\": \"Jane\",\n" +
                            "  \"familyName\": \"Lamborgizzia\"\n" +
                            "}";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.CREATED);

    }



    /**
     * DELETE /individual/{id} : Deletes a Individual
     * This operation deletes a Individual entity.
     *
     * @param id Identifier of the Resource (required)
     * @return Accepted (status code 202)
     *         or Deleted (status code 204)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     *         or Not Implemented (status code 501)
     *         or Service Unavailable (status code 503)
     */
    @Operation(
        operationId = "deleteIndividual",
        summary = "Deletes a Individual",
        description = "This operation deletes a Individual entity.",
        tags = { "individual" },
        responses = {
            @ApiResponse(responseCode = "202", description = "Accepted"),
            @ApiResponse(responseCode = "204", description = "Deleted"),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "501", description = "Not Implemented", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "Service Unavailable", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/individual/{id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Void> deleteIndividual(
        @Parameter(name = "id", description = "Identifier of the Resource", required = true, in = ParameterIn.PATH) @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /individual : List or find Individual objects
     * List or find Individual objects
     *
     * @param fields Comma-separated properties to be provided in response (optional)
     * @param offset Requested index for start of resources to be provided in response (optional)
     * @param limit Requested number of resources to be provided in response (optional)
     * @return Success (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Internal Server Error (status code 500)
     *         or Not Implemented (status code 501)
     *         or Service Unavailable (status code 503)
     */
    @Operation(
        operationId = "listIndividual",
        summary = "List or find Individual objects",
        description = "List or find Individual objects",
        tags = { "individual" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Individual.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "501", description = "Not Implemented", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "Service Unavailable", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/individual",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Individual>> listIndividual(
        @Parameter(name = "fields", description = "Comma-separated properties to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields,
        @Parameter(name = "offset", description = "Requested index for start of resources to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false) Integer offset,
        @Parameter(name = "limit", description = "Requested number of resources to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) Integer limit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[\n" +
                            "  {\n" +
                            "    \"id\": \"42\",\n" +
                            "    \"href\": \"https://serverRoot/tmf-api/party/v5/individual/42\",\n" +
                            "    \"@type\": \"Individual\",\n" +
                            "    \"@baseType\": \"Party\",\n" +
                            "    \"givenName\": \"Jane\",\n" +
                            "    \"familyName\": \"Lamborgizzia\"\n" +
                            "  },\n" +
                            "  {\n" +
                            "    \"id\": \"52\",\n" +
                            "    \"href\": \"https://serverRoot/tmf-api/party/v5/individual/52\",\n" +
                            "    \"@type\": \"Individual\",\n" +
                            "    \"@baseType\": \"Party\",\n" +
                            "    \"givenName\": \"Paul\",\n" +
                            "    \"familyName\": \"Newman\"\n" +
                            "  }\n" +
                            "]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /individual/{id} : Updates partially a Individual
     * This operation updates partially a Individual entity.
     *
     * @param id Identifier of the Resource (required)
     * @param individualMVO The Individual to be patched (required)
     * @param fields Comma-separated properties to be provided in response (optional)
     * @return Success (status code 200)
     *         or Accepted (status code 202)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     *         or Not Implemented (status code 501)
     *         or Service Unavailable (status code 503)
     */
    @Operation(
        operationId = "patchIndividual",
        summary = "Updates partially a Individual",
        description = "This operation updates partially a Individual entity.",
        tags = { "individual" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Individual.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Individual.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Individual.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Individual.class))
            }),
            @ApiResponse(responseCode = "202", description = "Accepted"),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "501", description = "Not Implemented", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "Service Unavailable", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/merge-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch+json", schema = @Schema(implementation = Error.class)),
                @Content(mediaType = "application/json-patch-query+json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/individual/{id}",
        produces = { "application/json", "application/merge-patch+json", "application/json-patch+json", "application/json-patch-query+json" },
        consumes = { "application/json", "application/merge-patch+json", "application/json-patch+json", "application/json-patch-query+json" }
    )
    
    default ResponseEntity<Individual> patchIndividual(
        @Parameter(name = "id", description = "Identifier of the Resource", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "IndividualMVO", description = "The Individual to be patched", required = true) @Valid @RequestBody IndividualMVO individualMVO,
        @Parameter(name = "fields", description = "Comma-separated properties to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"taxExemptionCertificate\" : [ { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" }, { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" } ], \"partyCharacteristic\" : [ { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true } ], \"gender\" : \"gender\", \"aristocraticTitle\" : \"aristocraticTitle\", \"@type\" : \"@type\", \"disability\" : [ { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" }, { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" } ], \"formattedName\" : \"formattedName\", \"individualIdentification\" : [ { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" }, { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" } ], \"title\" : \"title\", \"legalName\" : \"legalName\", \"@baseType\" : \"@baseType\", \"countryOfBirth\" : \"countryOfBirth\", \"skill\" : [ { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" }, { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" } ], \"familyName\" : \"familyName\", \"deathDate\" : \"2000-01-23T04:56:07.000+00:00\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"creditRating\" : [ { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 }, { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 } ], \"generation\" : \"generation\", \"placeOfBirth\" : \"placeOfBirth\", \"givenName\" : \"givenName\", \"relatedParty\" : [ { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\", \"externalReference\" : [ { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"languageAbility\" : [ { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" }, { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" } ], \"nationality\" : \"nationality\", \"preferredGivenName\" : \"preferredGivenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"name\" : \"name\", \"middleName\" : \"middleName\", \"location\" : \"location\", \"otherName\" : [ { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" }, { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" } ], \"maritalStatus\" : \"maritalStatus\", \"status\" : \"initialized\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json-patch+json"))) {
                    String exampleString = "{ \"taxExemptionCertificate\" : [ { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" }, { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" } ], \"partyCharacteristic\" : [ { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true } ], \"gender\" : \"gender\", \"aristocraticTitle\" : \"aristocraticTitle\", \"@type\" : \"@type\", \"disability\" : [ { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" }, { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" } ], \"formattedName\" : \"formattedName\", \"individualIdentification\" : [ { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" }, { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" } ], \"title\" : \"title\", \"legalName\" : \"legalName\", \"@baseType\" : \"@baseType\", \"countryOfBirth\" : \"countryOfBirth\", \"skill\" : [ { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" }, { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" } ], \"familyName\" : \"familyName\", \"deathDate\" : \"2000-01-23T04:56:07.000+00:00\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"creditRating\" : [ { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 }, { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 } ], \"generation\" : \"generation\", \"placeOfBirth\" : \"placeOfBirth\", \"givenName\" : \"givenName\", \"relatedParty\" : [ { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\", \"externalReference\" : [ { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"languageAbility\" : [ { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" }, { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" } ], \"nationality\" : \"nationality\", \"preferredGivenName\" : \"preferredGivenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"name\" : \"name\", \"middleName\" : \"middleName\", \"location\" : \"location\", \"otherName\" : [ { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" }, { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" } ], \"maritalStatus\" : \"maritalStatus\", \"status\" : \"initialized\" }";
                    ApiUtil.setExampleResponse(request, "application/json-patch+json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json-patch-query+json"))) {
                    String exampleString = "{ \"taxExemptionCertificate\" : [ { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" }, { \"reason\" : \"reason\", \"taxDefinition\" : [ { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" }, { \"@baseType\" : \"@baseType\", \"jurisdictionLevel\" : \"Country\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"jurisdictionName\" : \"USA\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"taxType\" : \"VAT\" } ], \"@baseType\" : \"@baseType\", \"attachment\" : { \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"attachmentType\" : \"attachmentType\", \"@type\" : \"@type\", \"description\" : \"Photograph of the Product\", \"mimeType\" : \"mimeType\", \"url\" : \"http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f\", \"content\" : \"content\", \"@baseType\" : \"@baseType\", \"size\" : { \"amount\" : 0.8008282, \"units\" : \"units\" }, \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"certificateNumber\" : \"certificateNumber\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"issuingJurisdiction\" : \"USA\" } ], \"partyCharacteristic\" : [ { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"characteristicRelationship\" : [ { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"@baseType\" : \"@baseType\", \"relationshipType\" : \"relationshipType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"preferred\" : true } ], \"gender\" : \"gender\", \"aristocraticTitle\" : \"aristocraticTitle\", \"@type\" : \"@type\", \"disability\" : [ { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" }, { \"disabilityCode\" : \"disabilityCode\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"disabilityName\" : \"disabilityName\" } ], \"formattedName\" : \"formattedName\", \"individualIdentification\" : [ { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" }, { \"issuingAuthority\" : \"issuingAuthority\", \"@baseType\" : \"@baseType\", \"issuingDate\" : \"2000-01-23T04:56:07.000+00:00\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"identificationType\" : \"identificationType\", \"@schemaLocation\" : \"@schemaLocation\", \"identificationId\" : \"identificationId\" } ], \"title\" : \"title\", \"legalName\" : \"legalName\", \"@baseType\" : \"@baseType\", \"countryOfBirth\" : \"countryOfBirth\", \"skill\" : [ { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" }, { \"skillName\" : \"skillName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"skillCode\" : \"skillCode\", \"evaluatedLevel\" : \"evaluatedLevel\", \"comment\" : \"comment\" } ], \"familyName\" : \"familyName\", \"deathDate\" : \"2000-01-23T04:56:07.000+00:00\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"creditRating\" : [ { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 }, { \"creditAgencyName\" : \"creditAgencyName\", \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"@type\" : \"@type\", \"creditAgencyType\" : \"creditAgencyType\", \"ratingReference\" : \"ratingReference\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\", \"ratingScore\" : 6 } ], \"generation\" : \"generation\", \"placeOfBirth\" : \"placeOfBirth\", \"givenName\" : \"givenName\", \"relatedParty\" : [ { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"partyOrPartyRole\" : { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"href\" : \"href\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\", \"externalReference\" : [ { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" }, { \"owner\" : \"MagentoCommerce\", \"externalIdentifierType\" : \"ProductOrder\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"id\" : \"id\", \"@schemaLocation\" : \"@schemaLocation\" } ], \"languageAbility\" : [ { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" }, { \"readingProficiency\" : \"readingProficiency\", \"writingProficiency\" : \"writingProficiency\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"isFavouriteLanguage\" : true, \"speakingProficiency\" : \"speakingProficiency\", \"listeningProficiency\" : \"listeningProficiency\", \"languageCode\" : \"languageCode\", \"languageName\" : \"languageName\" } ], \"nationality\" : \"nationality\", \"preferredGivenName\" : \"preferredGivenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"name\" : \"name\", \"middleName\" : \"middleName\", \"location\" : \"location\", \"otherName\" : [ { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" }, { \"generation\" : \"generation\", \"legalName\" : \"legalName\", \"aristocraticTitle\" : \"aristocraticTitle\", \"preferredGivenName\" : \"preferredGivenName\", \"validFor\" : { \"startDateTime\" : \"1985-04-12T23:20:50.52Z\", \"endDateTime\" : \"1985-04-12T23:20:50.52Z\" }, \"givenName\" : \"givenName\", \"familyNamePrefix\" : \"familyNamePrefix\", \"familyName\" : \"familyName\", \"formattedName\" : \"formattedName\", \"fullName\" : \"fullName\", \"middleName\" : \"middleName\", \"title\" : \"title\" } ], \"maritalStatus\" : \"maritalStatus\", \"status\" : \"initialized\" }";
                    ApiUtil.setExampleResponse(request, "application/json-patch-query+json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/merge-patch+json"))) {
                    String exampleString = "Custom MIME type example not yet supported: application/merge-patch+json";
                    ApiUtil.setExampleResponse(request, "application/merge-patch+json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /individual/{id} : Retrieves a Individual by ID
     * This operation retrieves a Individual entity. Attribute selection enabled for all first level attributes.
     *
     * @param id Identifier of the Resource (required)
     * @param fields Comma-separated properties to be provided in response (optional)
     * @return Success (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Internal Server Error (status code 500)
     *         or Not Implemented (status code 501)
     *         or Service Unavailable (status code 503)
     */
    @Operation(
        operationId = "retrieveIndividual",
        summary = "Retrieves a Individual by ID",
        description = "This operation retrieves a Individual entity. Attribute selection enabled for all first level attributes.",
        tags = { "individual" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Individual.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "501", description = "Not Implemented", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "Service Unavailable", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/individual/{id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Individual> retrieveIndividual(
        @Parameter(name = "id", description = "Identifier of the Resource", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "fields", description = "Comma-separated properties to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{\n" +
                            "    \"taxExemptionCertificate\": [\n" +
                            "        {\n" +
                            "            \"reason\": \"Non-profit organization\",\n" +
                            "            \"taxDefinition\": [\n" +
                            "                {\n" +
                            "                    \"@baseType\": \"Tax\",\n" +
                            "                    \"jurisdictionLevel\": \"Country\",\n" +
                            "                    \"validFor\": {\n" +
                            "                        \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                        \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "                    },\n" +
                            "                    \"@type\": \"VAT\",\n" +
                            "                    \"jurisdictionName\": \"USA\",\n" +
                            "                    \"name\": \"VAT Tax\",\n" +
                            "                    \"id\": \"tax-def-1\",\n" +
                            "                    \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "                    \"taxType\": \"VAT\"\n" +
                            "                }\n" +
                            "            ],\n" +
                            "            \"@baseType\": \"Certificate\",\n" +
                            "            \"attachment\": {\n" +
                            "                \"validFor\": {\n" +
                            "                    \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                    \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "                },\n" +
                            "                \"attachmentType\": \"Document\",\n" +
                            "                \"@type\": \"PDF\",\n" +
                            "                \"description\": \"Certificate of tax exemption\",\n" +
                            "                \"mimeType\": \"application/pdf\",\n" +
                            "                \"url\": \"http://example.com/certificates/tax-exemption.pdf\",\n" +
                            "                \"content\": \"base64encodedcontent\",\n" +
                            "                \"@baseType\": \"Attachment\",\n" +
                            "                \"size\": {\n" +
                            "                    \"amount\": 1.2,\n" +
                            "                    \"units\": \"MB\"\n" +
                            "                },\n" +
                            "                \"name\": \"Tax Exemption Certificate\",\n" +
                            "                \"href\": \"http://example.com/attachments/tax-exemption\",\n" +
                            "                \"id\": \"att-1\",\n" +
                            "                \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "            },\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"certificateNumber\": \"12345\",\n" +
                            "            \"@type\": \"Exemption\",\n" +
                            "            \"id\": \"cert-1\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "            \"issuingJurisdiction\": \"USA\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"partyCharacteristic\": [\n" +
                            "        {\n" +
                            "            \"characteristicRelationship\": [\n" +
                            "                {\n" +
                            "                    \"@baseType\": \"Characteristic\",\n" +
                            "                    \"relationshipType\": \"dependent\",\n" +
                            "                    \"@type\": \"Dependent\",\n" +
                            "                    \"id\": \"char-rel-1\",\n" +
                            "                    \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "                }\n" +
                            "            ],\n" +
                            "            \"@baseType\": \"Characteristic\",\n" +
                            "            \"@type\": \"Characteristic\",\n" +
                            "            \"valueType\": \"String\",\n" +
                            "            \"name\": \"Age\",\n" +
                            "            \"id\": \"char-1\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"contactMedium\": [\n" +
                            "        {\n" +
                            "            \"@baseType\": \"ContactMedium\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"@type\": \"Email\",\n" +
                            "            \"contactType\": \"Primary\",\n" +
                            "            \"id\": \"contact-1\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "            \"preferred\": true\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"gender\": \"Male\",\n" +
                            "    \"aristocraticTitle\": \"Sir\",\n" +
                            "    \"@type\": \"Individual\",\n" +
                            "    \"disability\": [\n" +
                            "        {\n" +
                            "            \"disabilityCode\": \"001\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"disabilityName\": \"Visual impairment\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"formattedName\": \"John Doe\",\n" +
                            "    \"individualIdentification\": [\n" +
                            "        {\n" +
                            "            \"issuingAuthority\": \"Government\",\n" +
                            "            \"@baseType\": \"Identification\",\n" +
                            "            \"issuingDate\": \"2010-01-01T00:00:00Z\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2010-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2030-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"@type\": \"Passport\",\n" +
                            "            \"identificationType\": \"Passport\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "            \"identificationId\": \"A1234567\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"title\": \"Mr.\",\n" +
                            "    \"legalName\": \"Johnathan Doe\",\n" +
                            "    \"@baseType\": \"Person\",\n" +
                            "    \"countryOfBirth\": \"USA\",\n" +
                            "    \"skill\": [\n" +
                            "        {\n" +
                            "            \"skillName\": \"Programming\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2010-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2030-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"skillCode\": \"PRG-001\",\n" +
                            "            \"evaluatedLevel\": \"Expert\",\n" +
                            "            \"comment\": \"10 years of experience\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"familyName\": \"Doe\",\n" +
                            "    \"deathDate\": null,\n" +
                            "    \"href\": \"http://example.com/individuals/john-doe\",\n" +
                            "    \"id\": \"ind-1\",\n" +
                            "    \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "    \"creditRating\": [\n" +
                            "        {\n" +
                            "            \"creditAgencyName\": \"Credit Bureau\",\n" +
                            "            \"@baseType\": \"CreditRating\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"@type\": \"CreditRating\",\n" +
                            "            \"creditAgencyType\": \"Standard\",\n" +
                            "            \"ratingReference\": \"CR-001\",\n" +
                            "            \"href\": \"http://example.com/credit-ratings/cr-1\",\n" +
                            "            \"id\": \"cr-1\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "            \"ratingScore\": 800\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"generation\": \"X\",\n" +
                            "    \"placeOfBirth\": \"New York, USA\",\n" +
                            "    \"givenName\": \"John\",\n" +
                            "    \"relatedParty\": [\n" +
                            "        {\n" +
                            "            \"partyOrPartyRole\": {\n" +
                            "                \"@referredType\": \"Person\",\n" +
                            "                \"@baseType\": \"RelatedParty\",\n" +
                            "                \"@type\": \"RelatedParty\",\n" +
                            "                \"name\": \"Jane Doe\",\n" +
                            "                \"href\": \"http://example.com/related-parties/jane-doe\",\n" +
                            "                \"id\": \"rel-1\",\n" +
                            "                \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "            },\n" +
                            "            \"role\": \"Spouse\",\n" +
                            "            \"@baseType\": \"Role\",\n" +
                            "            \"@type\": \"Spouse\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"birthDate\": \"1980-01-01T00:00:00Z\",\n" +
                            "    \"externalReference\": [\n" +
                            "        {\n" +
                            "            \"owner\": \"System A\",\n" +
                            "            \"externalIdentifierType\": \"ID\",\n" +
                            "            \"@baseType\": \"ExternalReference\",\n" +
                            "            \"@type\": \"ExternalReference\",\n" +
                            "            \"id\": \"ext-ref-1\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"languageAbility\": [\n" +
                            "        {\n" +
                            "            \"readingProficiency\": \"High\",\n" +
                            "            \"writingProficiency\": \"High\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"isFavouriteLanguage\": true,\n" +
                            "            \"speakingProficiency\": \"High\",\n" +
                            "            \"listeningProficiency\": \"High\",\n" +
                            "            \"languageCode\": \"EN\",\n" +
                            "            \"languageName\": \"English\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"nationality\": \"American\",\n" +
                            "    \"preferredGivenName\": \"John\",\n" +
                            "    \"familyNamePrefix\": \"\",\n" +
                            "    \"name\": \"Johnathan Doe\",\n" +
                            "    \"middleName\": \"A.\",\n" +
                            "    \"location\": \"New York\",\n" +
                            "    \"otherName\": [\n" +
                            "        {\n" +
                            "            \"generation\": \"X\",\n" +
                            "            \"legalName\": \"John A. Doe\",\n" +
                            "            \"aristocraticTitle\": \"Sir\",\n" +
                            "            \"preferredGivenName\": \"John\",\n" +
                            "            \"validFor\": {\n" +
                            "                \"startDateTime\": \"2023-01-01T00:00:00Z\",\n" +
                            "                \"endDateTime\": \"2025-12-31T23:59:59Z\"\n" +
                            "            },\n" +
                            "            \"givenName\": \"John\",\n" +
                            "            \"familyNamePrefix\": \"\",\n" +
                            "            \"familyName\": \"Doe\",\n" +
                            "            \"formattedName\": \"John A. Doe\",\n" +
                            "            \"fullName\": \"John A. Doe\",\n" +
                            "            \"middleName\": \"A.\",\n" +
                            "            \"title\": \"Mr.\"\n" +
                            "        }\n" +
                            "    ],\n" +
                            "    \"maritalStatus\": \"Married\",\n" +
                            "    \"characteristic\": [\n" +
                            "        {\n" +
                            "            \"@baseType\": \"Characteristic\",\n" +
                            "            \"@type\": \"Characteristic\",\n" +
                            "            \"id\": \"char-2\",\n" +
                            "            \"@schemaLocation\": \"http://example.com/schema\",\n" +
                            "            \"name\": \"Hobby\",\n" +
                            "            \"value\": \"Reading\"\n" +
                            "        }\n" +
                            "    ]\n" +
                            "}";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"@schemaLocation\" : \"@schemaLocation\", \"message\" : \"message\", \"referenceError\" : \"referenceError\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
